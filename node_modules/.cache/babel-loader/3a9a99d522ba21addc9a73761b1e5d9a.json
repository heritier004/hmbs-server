{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/heritier/repos/github/hmbs-server/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/heritier/repos/github/hmbs-server/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar spawn = require('child_process').spawn;\n\nvar packageData = require('../../package.json');\n\nvar shared = require('../shared');\n/**\n * Generates a Transport object for Sendmail\n *\n * Possible options can be the following:\n *\n *  * **path** optional path to sendmail binary\n *  * **newline** either 'windows' or 'unix'\n *  * **args** an array of arguments for the sendmail binary\n *\n * @constructor\n * @param {Object} optional config parameter for Sendmail\n */\n\n\nvar SendmailTransport = /*#__PURE__*/function () {\n  function SendmailTransport(options) {\n    _classCallCheck(this, SendmailTransport);\n\n    options = options || {}; // use a reference to spawn for mocking purposes\n\n    this._spawn = spawn;\n    this.options = options || {};\n    this.name = 'Sendmail';\n    this.version = packageData.version;\n    this.path = 'sendmail';\n    this.args = false;\n    this.winbreak = false;\n    this.logger = shared.getLogger(this.options, {\n      component: this.options.component || 'sendmail'\n    });\n\n    if (options) {\n      if (typeof options === 'string') {\n        this.path = options;\n      } else if (typeof options === 'object') {\n        if (options.path) {\n          this.path = options.path;\n        }\n\n        if (Array.isArray(options.args)) {\n          this.args = options.args;\n        }\n\n        this.winbreak = ['win', 'windows', 'dos', '\\r\\n'].includes((options.newline || '').toString().toLowerCase());\n      }\n    }\n  }\n  /**\n   * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>\n   *\n   * @param {Object} emailMessage MailComposer object\n   * @param {Function} callback Callback function to run when the sending is completed\n   */\n\n\n  _createClass(SendmailTransport, [{\n    key: \"send\",\n    value: function send(mail, done) {\n      var _this = this;\n\n      // Sendmail strips this header line by itself\n      mail.message.keepBcc = true;\n      var envelope = mail.data.envelope || mail.message.getEnvelope();\n      var messageId = mail.message.messageId();\n      var args;\n      var sendmail;\n      var returned;\n      var hasInvalidAddresses = [].concat(envelope.from || []).concat(envelope.to || []).some(function (addr) {\n        return /^-/.test(addr);\n      });\n\n      if (hasInvalidAddresses) {\n        return done(new Error('Can not send mail. Invalid envelope addresses.'));\n      }\n\n      if (this.args) {\n        // force -i to keep single dots\n        args = ['-i'].concat(this.args).concat(envelope.to);\n      } else {\n        args = ['-i'].concat(envelope.from ? ['-f', envelope.from] : []).concat(envelope.to);\n      }\n\n      var callback = function callback(err) {\n        if (returned) {\n          // ignore any additional responses, already done\n          return;\n        }\n\n        returned = true;\n\n        if (typeof done === 'function') {\n          if (err) {\n            return done(err);\n          } else {\n            return done(null, {\n              envelope: mail.data.envelope || mail.message.getEnvelope(),\n              messageId: messageId,\n              response: 'Messages queued for delivery'\n            });\n          }\n        }\n      };\n\n      try {\n        sendmail = this._spawn(this.path, args);\n      } catch (E) {\n        this.logger.error({\n          err: E,\n          tnx: 'spawn',\n          messageId: messageId\n        }, 'Error occurred while spawning sendmail. %s', E.message);\n        return callback(E);\n      }\n\n      if (sendmail) {\n        sendmail.on('error', function (err) {\n          _this.logger.error({\n            err: err,\n            tnx: 'spawn',\n            messageId: messageId\n          }, 'Error occurred when sending message %s. %s', messageId, err.message);\n\n          callback(err);\n        });\n        sendmail.once('exit', function (code) {\n          if (!code) {\n            return callback();\n          }\n\n          var err;\n\n          if (code === 127) {\n            err = new Error('Sendmail command not found, process exited with code ' + code);\n          } else {\n            err = new Error('Sendmail exited with code ' + code);\n          }\n\n          _this.logger.error({\n            err: err,\n            tnx: 'stdin',\n            messageId: messageId\n          }, 'Error sending message %s to sendmail. %s', messageId, err.message);\n\n          callback(err);\n        });\n        sendmail.once('close', callback);\n        sendmail.stdin.on('error', function (err) {\n          _this.logger.error({\n            err: err,\n            tnx: 'stdin',\n            messageId: messageId\n          }, 'Error occurred when piping message %s to sendmail. %s', messageId, err.message);\n\n          callback(err);\n        });\n        var recipients = [].concat(envelope.to || []);\n\n        if (recipients.length > 3) {\n          recipients.push('...and ' + recipients.splice(2).length + ' more');\n        }\n\n        this.logger.info({\n          tnx: 'send',\n          messageId: messageId\n        }, 'Sending message %s to <%s>', messageId, recipients.join(', '));\n        var sourceStream = mail.message.createReadStream();\n        sourceStream.once('error', function (err) {\n          _this.logger.error({\n            err: err,\n            tnx: 'stdin',\n            messageId: messageId\n          }, 'Error occurred when generating message %s. %s', messageId, err.message);\n\n          sendmail.kill('SIGINT'); // do not deliver the message\n\n          callback(err);\n        });\n        sourceStream.pipe(sendmail.stdin);\n      } else {\n        return callback(new Error('sendmail was not found'));\n      }\n    }\n  }]);\n\n  return SendmailTransport;\n}();\n\nmodule.exports = SendmailTransport;","map":{"version":3,"names":["spawn","require","packageData","shared","SendmailTransport","options","_spawn","name","version","path","args","winbreak","logger","getLogger","component","Array","isArray","includes","newline","toString","toLowerCase","mail","done","message","keepBcc","envelope","data","getEnvelope","messageId","sendmail","returned","hasInvalidAddresses","concat","from","to","some","addr","test","Error","callback","err","response","E","error","tnx","on","once","code","stdin","recipients","length","push","splice","info","join","sourceStream","createReadStream","kill","pipe","module","exports"],"sources":["/Users/heritier/repos/github/hmbs-server/node_modules/nodemailer/lib/sendmail-transport/index.js"],"sourcesContent":["'use strict';\n\nconst spawn = require('child_process').spawn;\nconst packageData = require('../../package.json');\nconst shared = require('../shared');\n\n/**\n * Generates a Transport object for Sendmail\n *\n * Possible options can be the following:\n *\n *  * **path** optional path to sendmail binary\n *  * **newline** either 'windows' or 'unix'\n *  * **args** an array of arguments for the sendmail binary\n *\n * @constructor\n * @param {Object} optional config parameter for Sendmail\n */\nclass SendmailTransport {\n    constructor(options) {\n        options = options || {};\n\n        // use a reference to spawn for mocking purposes\n        this._spawn = spawn;\n\n        this.options = options || {};\n\n        this.name = 'Sendmail';\n        this.version = packageData.version;\n\n        this.path = 'sendmail';\n        this.args = false;\n        this.winbreak = false;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'sendmail'\n        });\n\n        if (options) {\n            if (typeof options === 'string') {\n                this.path = options;\n            } else if (typeof options === 'object') {\n                if (options.path) {\n                    this.path = options.path;\n                }\n                if (Array.isArray(options.args)) {\n                    this.args = options.args;\n                }\n                this.winbreak = ['win', 'windows', 'dos', '\\r\\n'].includes((options.newline || '').toString().toLowerCase());\n            }\n        }\n    }\n\n    /**\n     * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    send(mail, done) {\n        // Sendmail strips this header line by itself\n        mail.message.keepBcc = true;\n\n        let envelope = mail.data.envelope || mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n        let args;\n        let sendmail;\n        let returned;\n\n        const hasInvalidAddresses = []\n            .concat(envelope.from || [])\n            .concat(envelope.to || [])\n            .some(addr => /^-/.test(addr));\n        if (hasInvalidAddresses) {\n            return done(new Error('Can not send mail. Invalid envelope addresses.'));\n        }\n\n        if (this.args) {\n            // force -i to keep single dots\n            args = ['-i'].concat(this.args).concat(envelope.to);\n        } else {\n            args = ['-i'].concat(envelope.from ? ['-f', envelope.from] : []).concat(envelope.to);\n        }\n\n        let callback = err => {\n            if (returned) {\n                // ignore any additional responses, already done\n                return;\n            }\n            returned = true;\n            if (typeof done === 'function') {\n                if (err) {\n                    return done(err);\n                } else {\n                    return done(null, {\n                        envelope: mail.data.envelope || mail.message.getEnvelope(),\n                        messageId,\n                        response: 'Messages queued for delivery'\n                    });\n                }\n            }\n        };\n\n        try {\n            sendmail = this._spawn(this.path, args);\n        } catch (E) {\n            this.logger.error(\n                {\n                    err: E,\n                    tnx: 'spawn',\n                    messageId\n                },\n                'Error occurred while spawning sendmail. %s',\n                E.message\n            );\n            return callback(E);\n        }\n\n        if (sendmail) {\n            sendmail.on('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'spawn',\n                        messageId\n                    },\n                    'Error occurred when sending message %s. %s',\n                    messageId,\n                    err.message\n                );\n                callback(err);\n            });\n\n            sendmail.once('exit', code => {\n                if (!code) {\n                    return callback();\n                }\n                let err;\n                if (code === 127) {\n                    err = new Error('Sendmail command not found, process exited with code ' + code);\n                } else {\n                    err = new Error('Sendmail exited with code ' + code);\n                }\n\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'stdin',\n                        messageId\n                    },\n                    'Error sending message %s to sendmail. %s',\n                    messageId,\n                    err.message\n                );\n                callback(err);\n            });\n            sendmail.once('close', callback);\n\n            sendmail.stdin.on('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'stdin',\n                        messageId\n                    },\n                    'Error occurred when piping message %s to sendmail. %s',\n                    messageId,\n                    err.message\n                );\n                callback(err);\n            });\n\n            let recipients = [].concat(envelope.to || []);\n            if (recipients.length > 3) {\n                recipients.push('...and ' + recipients.splice(2).length + ' more');\n            }\n            this.logger.info(\n                {\n                    tnx: 'send',\n                    messageId\n                },\n                'Sending message %s to <%s>',\n                messageId,\n                recipients.join(', ')\n            );\n\n            let sourceStream = mail.message.createReadStream();\n            sourceStream.once('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'stdin',\n                        messageId\n                    },\n                    'Error occurred when generating message %s. %s',\n                    messageId,\n                    err.message\n                );\n                sendmail.kill('SIGINT'); // do not deliver the message\n                callback(err);\n            });\n\n            sourceStream.pipe(sendmail.stdin);\n        } else {\n            return callback(new Error('sendmail was not found'));\n        }\n    }\n}\n\nmodule.exports = SendmailTransport;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}