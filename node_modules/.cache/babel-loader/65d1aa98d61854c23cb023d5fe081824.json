{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"/Users/heritier/repos/github/hmbs-server/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nvar _classCallCheck = require(\"/Users/heritier/repos/github/hmbs-server/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/heritier/repos/github/hmbs-server/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _assertThisInitialized = require(\"/Users/heritier/repos/github/hmbs-server/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"/Users/heritier/repos/github/hmbs-server/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/Users/heritier/repos/github/hmbs-server/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar EventEmitter = require('events');\n\nvar shared = require('../shared');\n\nvar mimeTypes = require('../mime-funcs/mime-types');\n\nvar MailComposer = require('../mail-composer');\n\nvar DKIM = require('../dkim');\n\nvar httpProxyClient = require('../smtp-connection/http-proxy-client');\n\nvar util = require('util');\n\nvar urllib = require('url');\n\nvar packageData = require('../../package.json');\n\nvar MailMessage = require('./mail-message');\n\nvar net = require('net');\n\nvar dns = require('dns');\n\nvar crypto = require('crypto');\n/**\n * Creates an object for exposing the Mail API\n *\n * @constructor\n * @param {Object} transporter Transport object instance to pass the mails to\n */\n\n\nvar Mail = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Mail, _EventEmitter);\n\n  var _super = _createSuper(Mail);\n\n  function Mail(transporter, options, defaults) {\n    var _this;\n\n    _classCallCheck(this, Mail);\n\n    _this = _super.call(this);\n    _this.options = options || {};\n    _this._defaults = defaults || {};\n    _this._defaultPlugins = {\n      compile: [function () {\n        var _this2;\n\n        return (_this2 = _this)._convertDataImages.apply(_this2, arguments);\n      }],\n      stream: []\n    };\n    _this._userPlugins = {\n      compile: [],\n      stream: []\n    };\n    _this.meta = new Map();\n    _this.dkim = _this.options.dkim ? new DKIM(_this.options.dkim) : false;\n    _this.transporter = transporter;\n    _this.transporter.mailer = _assertThisInitialized(_this);\n    _this.logger = shared.getLogger(_this.options, {\n      component: _this.options.component || 'mail'\n    });\n\n    _this.logger.debug({\n      tnx: 'create'\n    }, 'Creating transport: %s', _this.getVersionString()); // setup emit handlers for the transporter\n\n\n    if (typeof _this.transporter.on === 'function') {\n      // deprecated log interface\n      _this.transporter.on('log', function (log) {\n        _this.logger.debug({\n          tnx: 'transport'\n        }, '%s: %s', log.type, log.message);\n      }); // transporter errors\n\n\n      _this.transporter.on('error', function (err) {\n        _this.logger.error({\n          err: err,\n          tnx: 'transport'\n        }, 'Transport Error: %s', err.message);\n\n        _this.emit('error', err);\n      }); // indicates if the sender has became idle\n\n\n      _this.transporter.on('idle', function () {\n        var _this3;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        (_this3 = _this).emit.apply(_this3, ['idle'].concat(args));\n      });\n    }\n    /**\n     * Optional methods passed to the underlying transport object\n     */\n\n\n    ['close', 'isIdle', 'verify'].forEach(function (method) {\n      _this[method] = function () {\n        if (typeof _this.transporter[method] === 'function') {\n          var _this$transporter;\n\n          if (method === 'verify' && typeof _this.getSocket === 'function') {\n            _this.transporter.getSocket = _this.getSocket;\n            _this.getSocket = false;\n          }\n\n          return (_this$transporter = _this.transporter)[method].apply(_this$transporter, arguments);\n        } else {\n          _this.logger.warn({\n            tnx: 'transport',\n            methodName: method\n          }, 'Non existing method %s called for transport', method);\n\n          return false;\n        }\n      };\n    }); // setup proxy handling\n\n    if (_this.options.proxy && typeof _this.options.proxy === 'string') {\n      _this.setupProxy(_this.options.proxy);\n    }\n\n    return _this;\n  }\n\n  _createClass(Mail, [{\n    key: \"use\",\n    value: function use(step, plugin) {\n      step = (step || '').toString();\n\n      if (!this._userPlugins.hasOwnProperty(step)) {\n        this._userPlugins[step] = [plugin];\n      } else {\n        this._userPlugins[step].push(plugin);\n      }\n\n      return this;\n    }\n    /**\n     * Sends an email using the preselected transport object\n     *\n     * @param {Object} data E-data description\n     * @param {Function?} callback Callback to run once the sending succeeded or failed\n     */\n\n  }, {\n    key: \"sendMail\",\n    value: function sendMail(data, callback) {\n      var _this4 = this;\n\n      var promise;\n\n      if (!callback) {\n        promise = new Promise(function (resolve, reject) {\n          callback = shared.callbackPromise(resolve, reject);\n        });\n      }\n\n      if (typeof this.getSocket === 'function') {\n        this.transporter.getSocket = this.getSocket;\n        this.getSocket = false;\n      }\n\n      var mail = new MailMessage(this, data);\n      this.logger.debug({\n        tnx: 'transport',\n        name: this.transporter.name,\n        version: this.transporter.version,\n        action: 'send'\n      }, 'Sending mail using %s/%s', this.transporter.name, this.transporter.version);\n\n      this._processPlugins('compile', mail, function (err) {\n        if (err) {\n          _this4.logger.error({\n            err: err,\n            tnx: 'plugin',\n            action: 'compile'\n          }, 'PluginCompile Error: %s', err.message);\n\n          return callback(err);\n        }\n\n        mail.message = new MailComposer(mail.data).compile();\n        mail.setMailerHeader();\n        mail.setPriorityHeaders();\n        mail.setListHeaders();\n\n        _this4._processPlugins('stream', mail, function (err) {\n          if (err) {\n            _this4.logger.error({\n              err: err,\n              tnx: 'plugin',\n              action: 'stream'\n            }, 'PluginStream Error: %s', err.message);\n\n            return callback(err);\n          }\n\n          if (mail.data.dkim || _this4.dkim) {\n            mail.message.processFunc(function (input) {\n              var dkim = mail.data.dkim ? new DKIM(mail.data.dkim) : _this4.dkim;\n\n              _this4.logger.debug({\n                tnx: 'DKIM',\n                messageId: mail.message.messageId(),\n                dkimDomains: dkim.keys.map(function (key) {\n                  return key.keySelector + '.' + key.domainName;\n                }).join(', ')\n              }, 'Signing outgoing message with %s keys', dkim.keys.length);\n\n              return dkim.sign(input, mail.data._dkim);\n            });\n          }\n\n          _this4.transporter.send(mail, function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            if (args[0]) {\n              _this4.logger.error({\n                err: args[0],\n                tnx: 'transport',\n                action: 'send'\n              }, 'Send Error: %s', args[0].message);\n            }\n\n            callback.apply(void 0, args);\n          });\n        });\n      });\n\n      return promise;\n    }\n  }, {\n    key: \"getVersionString\",\n    value: function getVersionString() {\n      return util.format('%s (%s; +%s; %s/%s)', packageData.name, packageData.version, packageData.homepage, this.transporter.name, this.transporter.version);\n    }\n  }, {\n    key: \"_processPlugins\",\n    value: function _processPlugins(step, mail, callback) {\n      step = (step || '').toString();\n\n      if (!this._userPlugins.hasOwnProperty(step)) {\n        return callback();\n      }\n\n      var userPlugins = this._userPlugins[step] || [];\n      var defaultPlugins = this._defaultPlugins[step] || [];\n\n      if (userPlugins.length) {\n        this.logger.debug({\n          tnx: 'transaction',\n          pluginCount: userPlugins.length,\n          step: step\n        }, 'Using %s plugins for %s', userPlugins.length, step);\n      }\n\n      if (userPlugins.length + defaultPlugins.length === 0) {\n        return callback();\n      }\n\n      var pos = 0;\n      var block = 'default';\n\n      var processPlugins = function processPlugins() {\n        var curplugins = block === 'default' ? defaultPlugins : userPlugins;\n\n        if (pos >= curplugins.length) {\n          if (block === 'default' && userPlugins.length) {\n            block = 'user';\n            pos = 0;\n            curplugins = userPlugins;\n          } else {\n            return callback();\n          }\n        }\n\n        var plugin = curplugins[pos++];\n        plugin(mail, function (err) {\n          if (err) {\n            return callback(err);\n          }\n\n          processPlugins();\n        });\n      };\n\n      processPlugins();\n    }\n    /**\n     * Sets up proxy handler for a Nodemailer object\n     *\n     * @param {String} proxyUrl Proxy configuration url\n     */\n\n  }, {\n    key: \"setupProxy\",\n    value: function setupProxy(proxyUrl) {\n      var _this5 = this;\n\n      var proxy = urllib.parse(proxyUrl); // setup socket handler for the mailer object\n\n      this.getSocket = function (options, callback) {\n        var protocol = proxy.protocol.replace(/:$/, '').toLowerCase();\n\n        if (_this5.meta.has('proxy_handler_' + protocol)) {\n          return _this5.meta.get('proxy_handler_' + protocol)(proxy, options, callback);\n        }\n\n        switch (protocol) {\n          // Connect using a HTTP CONNECT method\n          case 'http':\n          case 'https':\n            httpProxyClient(proxy.href, options.port, options.host, function (err, socket) {\n              if (err) {\n                return callback(err);\n              }\n\n              return callback(null, {\n                connection: socket\n              });\n            });\n            return;\n\n          case 'socks':\n          case 'socks5':\n          case 'socks4':\n          case 'socks4a':\n            {\n              if (!_this5.meta.has('proxy_socks_module')) {\n                return callback(new Error('Socks module not loaded'));\n              }\n\n              var connect = function connect(ipaddress) {\n                var _connectionOpts;\n\n                var proxyV2 = !!_this5.meta.get('proxy_socks_module').SocksClient;\n                var socksClient = proxyV2 ? _this5.meta.get('proxy_socks_module').SocksClient : _this5.meta.get('proxy_socks_module');\n                var proxyType = Number(proxy.protocol.replace(/\\D/g, '')) || 5;\n                var connectionOpts = (_connectionOpts = {\n                  proxy: {\n                    ipaddress: ipaddress,\n                    port: Number(proxy.port),\n                    type: proxyType\n                  }\n                }, _defineProperty(_connectionOpts, proxyV2 ? 'destination' : 'target', {\n                  host: options.host,\n                  port: options.port\n                }), _defineProperty(_connectionOpts, \"command\", 'connect'), _connectionOpts);\n\n                if (proxy.auth) {\n                  var username = decodeURIComponent(proxy.auth.split(':').shift());\n                  var password = decodeURIComponent(proxy.auth.split(':').pop());\n\n                  if (proxyV2) {\n                    connectionOpts.proxy.userId = username;\n                    connectionOpts.proxy.password = password;\n                  } else if (proxyType === 4) {\n                    connectionOpts.userid = username;\n                  } else {\n                    connectionOpts.authentication = {\n                      username: username,\n                      password: password\n                    };\n                  }\n                }\n\n                socksClient.createConnection(connectionOpts, function (err, info) {\n                  if (err) {\n                    return callback(err);\n                  }\n\n                  return callback(null, {\n                    connection: info.socket || info\n                  });\n                });\n              };\n\n              if (net.isIP(proxy.hostname)) {\n                return connect(proxy.hostname);\n              }\n\n              return dns.resolve(proxy.hostname, function (err, address) {\n                if (err) {\n                  return callback(err);\n                }\n\n                connect(Array.isArray(address) ? address[0] : address);\n              });\n            }\n        }\n\n        callback(new Error('Unknown proxy configuration'));\n      };\n    }\n  }, {\n    key: \"_convertDataImages\",\n    value: function _convertDataImages(mail, callback) {\n      if (!this.options.attachDataUrls && !mail.data.attachDataUrls || !mail.data.html) {\n        return callback();\n      }\n\n      mail.resolveContent(mail.data, 'html', function (err, html) {\n        if (err) {\n          return callback(err);\n        }\n\n        var cidCounter = 0;\n        html = (html || '').toString().replace(/(<img\\b[^>]* src\\s*=[\\s\"']*)(data:([^;]+);[^\"'>\\s]+)/gi, function (match, prefix, dataUri, mimeType) {\n          var cid = crypto.randomBytes(10).toString('hex') + '@localhost';\n\n          if (!mail.data.attachments) {\n            mail.data.attachments = [];\n          }\n\n          if (!Array.isArray(mail.data.attachments)) {\n            mail.data.attachments = [].concat(mail.data.attachments || []);\n          }\n\n          mail.data.attachments.push({\n            path: dataUri,\n            cid: cid,\n            filename: 'image-' + ++cidCounter + '.' + mimeTypes.detectExtension(mimeType)\n          });\n          return prefix + 'cid:' + cid;\n        });\n        mail.data.html = html;\n        callback();\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      return this.meta.set(key, value);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.meta.get(key);\n    }\n  }]);\n\n  return Mail;\n}(EventEmitter);\n\nmodule.exports = Mail;","map":{"version":3,"names":["EventEmitter","require","shared","mimeTypes","MailComposer","DKIM","httpProxyClient","util","urllib","packageData","MailMessage","net","dns","crypto","Mail","transporter","options","defaults","_defaults","_defaultPlugins","compile","_convertDataImages","stream","_userPlugins","meta","Map","dkim","mailer","logger","getLogger","component","debug","tnx","getVersionString","on","log","type","message","err","error","emit","args","forEach","method","getSocket","warn","methodName","proxy","setupProxy","step","plugin","toString","hasOwnProperty","push","data","callback","promise","Promise","resolve","reject","callbackPromise","mail","name","version","action","_processPlugins","setMailerHeader","setPriorityHeaders","setListHeaders","processFunc","input","messageId","dkimDomains","keys","map","key","keySelector","domainName","join","length","sign","_dkim","send","format","homepage","userPlugins","defaultPlugins","pluginCount","pos","block","processPlugins","curplugins","proxyUrl","parse","protocol","replace","toLowerCase","has","get","href","port","host","socket","connection","Error","connect","ipaddress","proxyV2","SocksClient","socksClient","proxyType","Number","connectionOpts","auth","username","decodeURIComponent","split","shift","password","pop","userId","userid","authentication","createConnection","info","isIP","hostname","address","Array","isArray","attachDataUrls","html","resolveContent","cidCounter","match","prefix","dataUri","mimeType","cid","randomBytes","attachments","concat","path","filename","detectExtension","value","set","module","exports"],"sources":["/Users/heritier/repos/github/hmbs-server/node_modules/nodemailer/lib/mailer/index.js"],"sourcesContent":["'use strict';\n\nconst EventEmitter = require('events');\nconst shared = require('../shared');\nconst mimeTypes = require('../mime-funcs/mime-types');\nconst MailComposer = require('../mail-composer');\nconst DKIM = require('../dkim');\nconst httpProxyClient = require('../smtp-connection/http-proxy-client');\nconst util = require('util');\nconst urllib = require('url');\nconst packageData = require('../../package.json');\nconst MailMessage = require('./mail-message');\nconst net = require('net');\nconst dns = require('dns');\nconst crypto = require('crypto');\n\n/**\n * Creates an object for exposing the Mail API\n *\n * @constructor\n * @param {Object} transporter Transport object instance to pass the mails to\n */\nclass Mail extends EventEmitter {\n    constructor(transporter, options, defaults) {\n        super();\n\n        this.options = options || {};\n        this._defaults = defaults || {};\n\n        this._defaultPlugins = {\n            compile: [(...args) => this._convertDataImages(...args)],\n            stream: []\n        };\n\n        this._userPlugins = {\n            compile: [],\n            stream: []\n        };\n\n        this.meta = new Map();\n\n        this.dkim = this.options.dkim ? new DKIM(this.options.dkim) : false;\n\n        this.transporter = transporter;\n        this.transporter.mailer = this;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'mail'\n        });\n\n        this.logger.debug(\n            {\n                tnx: 'create'\n            },\n            'Creating transport: %s',\n            this.getVersionString()\n        );\n\n        // setup emit handlers for the transporter\n        if (typeof this.transporter.on === 'function') {\n            // deprecated log interface\n            this.transporter.on('log', log => {\n                this.logger.debug(\n                    {\n                        tnx: 'transport'\n                    },\n                    '%s: %s',\n                    log.type,\n                    log.message\n                );\n            });\n\n            // transporter errors\n            this.transporter.on('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'transport'\n                    },\n                    'Transport Error: %s',\n                    err.message\n                );\n                this.emit('error', err);\n            });\n\n            // indicates if the sender has became idle\n            this.transporter.on('idle', (...args) => {\n                this.emit('idle', ...args);\n            });\n        }\n\n        /**\n         * Optional methods passed to the underlying transport object\n         */\n        ['close', 'isIdle', 'verify'].forEach(method => {\n            this[method] = (...args) => {\n                if (typeof this.transporter[method] === 'function') {\n                    if (method === 'verify' && typeof this.getSocket === 'function') {\n                        this.transporter.getSocket = this.getSocket;\n                        this.getSocket = false;\n                    }\n                    return this.transporter[method](...args);\n                } else {\n                    this.logger.warn(\n                        {\n                            tnx: 'transport',\n                            methodName: method\n                        },\n                        'Non existing method %s called for transport',\n                        method\n                    );\n                    return false;\n                }\n            };\n        });\n\n        // setup proxy handling\n        if (this.options.proxy && typeof this.options.proxy === 'string') {\n            this.setupProxy(this.options.proxy);\n        }\n    }\n\n    use(step, plugin) {\n        step = (step || '').toString();\n        if (!this._userPlugins.hasOwnProperty(step)) {\n            this._userPlugins[step] = [plugin];\n        } else {\n            this._userPlugins[step].push(plugin);\n        }\n\n        return this;\n    }\n\n    /**\n     * Sends an email using the preselected transport object\n     *\n     * @param {Object} data E-data description\n     * @param {Function?} callback Callback to run once the sending succeeded or failed\n     */\n    sendMail(data, callback) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        if (typeof this.getSocket === 'function') {\n            this.transporter.getSocket = this.getSocket;\n            this.getSocket = false;\n        }\n\n        let mail = new MailMessage(this, data);\n\n        this.logger.debug(\n            {\n                tnx: 'transport',\n                name: this.transporter.name,\n                version: this.transporter.version,\n                action: 'send'\n            },\n            'Sending mail using %s/%s',\n            this.transporter.name,\n            this.transporter.version\n        );\n\n        this._processPlugins('compile', mail, err => {\n            if (err) {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'plugin',\n                        action: 'compile'\n                    },\n                    'PluginCompile Error: %s',\n                    err.message\n                );\n                return callback(err);\n            }\n\n            mail.message = new MailComposer(mail.data).compile();\n\n            mail.setMailerHeader();\n            mail.setPriorityHeaders();\n            mail.setListHeaders();\n\n            this._processPlugins('stream', mail, err => {\n                if (err) {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'plugin',\n                            action: 'stream'\n                        },\n                        'PluginStream Error: %s',\n                        err.message\n                    );\n                    return callback(err);\n                }\n\n                if (mail.data.dkim || this.dkim) {\n                    mail.message.processFunc(input => {\n                        let dkim = mail.data.dkim ? new DKIM(mail.data.dkim) : this.dkim;\n                        this.logger.debug(\n                            {\n                                tnx: 'DKIM',\n                                messageId: mail.message.messageId(),\n                                dkimDomains: dkim.keys.map(key => key.keySelector + '.' + key.domainName).join(', ')\n                            },\n                            'Signing outgoing message with %s keys',\n                            dkim.keys.length\n                        );\n                        return dkim.sign(input, mail.data._dkim);\n                    });\n                }\n\n                this.transporter.send(mail, (...args) => {\n                    if (args[0]) {\n                        this.logger.error(\n                            {\n                                err: args[0],\n                                tnx: 'transport',\n                                action: 'send'\n                            },\n                            'Send Error: %s',\n                            args[0].message\n                        );\n                    }\n                    callback(...args);\n                });\n            });\n        });\n\n        return promise;\n    }\n\n    getVersionString() {\n        return util.format('%s (%s; +%s; %s/%s)', packageData.name, packageData.version, packageData.homepage, this.transporter.name, this.transporter.version);\n    }\n\n    _processPlugins(step, mail, callback) {\n        step = (step || '').toString();\n\n        if (!this._userPlugins.hasOwnProperty(step)) {\n            return callback();\n        }\n\n        let userPlugins = this._userPlugins[step] || [];\n        let defaultPlugins = this._defaultPlugins[step] || [];\n\n        if (userPlugins.length) {\n            this.logger.debug(\n                {\n                    tnx: 'transaction',\n                    pluginCount: userPlugins.length,\n                    step\n                },\n                'Using %s plugins for %s',\n                userPlugins.length,\n                step\n            );\n        }\n\n        if (userPlugins.length + defaultPlugins.length === 0) {\n            return callback();\n        }\n\n        let pos = 0;\n        let block = 'default';\n        let processPlugins = () => {\n            let curplugins = block === 'default' ? defaultPlugins : userPlugins;\n            if (pos >= curplugins.length) {\n                if (block === 'default' && userPlugins.length) {\n                    block = 'user';\n                    pos = 0;\n                    curplugins = userPlugins;\n                } else {\n                    return callback();\n                }\n            }\n            let plugin = curplugins[pos++];\n            plugin(mail, err => {\n                if (err) {\n                    return callback(err);\n                }\n                processPlugins();\n            });\n        };\n\n        processPlugins();\n    }\n\n    /**\n     * Sets up proxy handler for a Nodemailer object\n     *\n     * @param {String} proxyUrl Proxy configuration url\n     */\n    setupProxy(proxyUrl) {\n        let proxy = urllib.parse(proxyUrl);\n\n        // setup socket handler for the mailer object\n        this.getSocket = (options, callback) => {\n            let protocol = proxy.protocol.replace(/:$/, '').toLowerCase();\n\n            if (this.meta.has('proxy_handler_' + protocol)) {\n                return this.meta.get('proxy_handler_' + protocol)(proxy, options, callback);\n            }\n\n            switch (protocol) {\n                // Connect using a HTTP CONNECT method\n                case 'http':\n                case 'https':\n                    httpProxyClient(proxy.href, options.port, options.host, (err, socket) => {\n                        if (err) {\n                            return callback(err);\n                        }\n                        return callback(null, {\n                            connection: socket\n                        });\n                    });\n                    return;\n                case 'socks':\n                case 'socks5':\n                case 'socks4':\n                case 'socks4a': {\n                    if (!this.meta.has('proxy_socks_module')) {\n                        return callback(new Error('Socks module not loaded'));\n                    }\n                    let connect = ipaddress => {\n                        let proxyV2 = !!this.meta.get('proxy_socks_module').SocksClient;\n                        let socksClient = proxyV2 ? this.meta.get('proxy_socks_module').SocksClient : this.meta.get('proxy_socks_module');\n                        let proxyType = Number(proxy.protocol.replace(/\\D/g, '')) || 5;\n                        let connectionOpts = {\n                            proxy: {\n                                ipaddress,\n                                port: Number(proxy.port),\n                                type: proxyType\n                            },\n                            [proxyV2 ? 'destination' : 'target']: {\n                                host: options.host,\n                                port: options.port\n                            },\n                            command: 'connect'\n                        };\n\n                        if (proxy.auth) {\n                            let username = decodeURIComponent(proxy.auth.split(':').shift());\n                            let password = decodeURIComponent(proxy.auth.split(':').pop());\n                            if (proxyV2) {\n                                connectionOpts.proxy.userId = username;\n                                connectionOpts.proxy.password = password;\n                            } else if (proxyType === 4) {\n                                connectionOpts.userid = username;\n                            } else {\n                                connectionOpts.authentication = {\n                                    username,\n                                    password\n                                };\n                            }\n                        }\n\n                        socksClient.createConnection(connectionOpts, (err, info) => {\n                            if (err) {\n                                return callback(err);\n                            }\n                            return callback(null, {\n                                connection: info.socket || info\n                            });\n                        });\n                    };\n\n                    if (net.isIP(proxy.hostname)) {\n                        return connect(proxy.hostname);\n                    }\n\n                    return dns.resolve(proxy.hostname, (err, address) => {\n                        if (err) {\n                            return callback(err);\n                        }\n                        connect(Array.isArray(address) ? address[0] : address);\n                    });\n                }\n            }\n            callback(new Error('Unknown proxy configuration'));\n        };\n    }\n\n    _convertDataImages(mail, callback) {\n        if ((!this.options.attachDataUrls && !mail.data.attachDataUrls) || !mail.data.html) {\n            return callback();\n        }\n        mail.resolveContent(mail.data, 'html', (err, html) => {\n            if (err) {\n                return callback(err);\n            }\n            let cidCounter = 0;\n            html = (html || '').toString().replace(/(<img\\b[^>]* src\\s*=[\\s\"']*)(data:([^;]+);[^\"'>\\s]+)/gi, (match, prefix, dataUri, mimeType) => {\n                let cid = crypto.randomBytes(10).toString('hex') + '@localhost';\n                if (!mail.data.attachments) {\n                    mail.data.attachments = [];\n                }\n                if (!Array.isArray(mail.data.attachments)) {\n                    mail.data.attachments = [].concat(mail.data.attachments || []);\n                }\n                mail.data.attachments.push({\n                    path: dataUri,\n                    cid,\n                    filename: 'image-' + ++cidCounter + '.' + mimeTypes.detectExtension(mimeType)\n                });\n                return prefix + 'cid:' + cid;\n            });\n            mail.data.html = html;\n            callback();\n        });\n    }\n\n    set(key, value) {\n        return this.meta.set(key, value);\n    }\n\n    get(key) {\n        return this.meta.get(key);\n    }\n}\n\nmodule.exports = Mail;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}